[gd_scene load_steps=18 format=3 uid="uid://b34wuq7gwoi5b"]

[ext_resource type="Texture2D" uid="uid://csxodtc2sfeuu" path="res://assets/textura_pasto (1).jpg" id="1_28dm3"]
[ext_resource type="Texture2D" uid="uid://cgqmcra8ykqsq" path="res://assets/thecumgun.png" id="1_ivqoo"]
[ext_resource type="Shader" uid="uid://6f47b5vnldw7" path="res://custom.tres" id="1_kjanr"]
[ext_resource type="Texture2D" uid="uid://dj2wuro26srr3" path="res://assets/sky_normal.jpg" id="2_ympfa"]
[ext_resource type="AudioStream" uid="uid://b6ic0crdqexaa" path="res://shootsound/ShootPlayer1.wav" id="4_q0d2a"]
[ext_resource type="AudioStream" uid="uid://dgsq1x4im4bpv" path="res://shootsound/ShootPlayer2.wav" id="5_wp25t"]
[ext_resource type="AudioStream" uid="uid://dc5w4s6t66ppt" path="res://shootsound/ShootPlayer3.wav" id="6_ympoa"]
[ext_resource type="AudioStream" uid="uid://bcylsf2krcxlp" path="res://shootsound/EmptyPlayer.wav" id="7_24gbr"]
[ext_resource type="AudioStream" uid="uid://bf4wti8i7q5mf" path="res://shootsound/ReloadPlayer.wav" id="8_2m65v"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_7x1pq"]
shader = ExtResource("1_kjanr")
shader_parameter/tex = ExtResource("2_ympfa")

[sub_resource type="Sky" id="Sky_mm31t"]
sky_material = SubResource("ShaderMaterial_7x1pq")

[sub_resource type="Environment" id="Environment_x6cpl"]
background_mode = 2
sky = SubResource("Sky_mm31t")

[sub_resource type="GDScript" id="GDScript_4xowi"]
script/source = "extends CharacterBody3D

# --- Parámetros de movimiento ---
@export var walk_speed: float = 5.0
@export var run_speed: float = 9.0
@export var crouch_speed: float = 2.5
@export var jump_speed: float = 6.0
@export var gravity: float = 9.8
@export var mouse_sensitivity: float = 0.0025

# --- Recoil de cámara y arma ---
@export var recoil_angle: float = 2.0
@export var recoil_recover_speed: float = 6.0
@export var weapon_recoil_distance: float = 0.2
@export var weapon_recoil_recover_speed: float = 5.0
var current_recoil_angle: float = 0.0
var current_weapon_recoil: float = 0.0

# --- Estamina ---
@export var max_stamina: float = 100.0
@export var stamina_recovery_rate: float = 15.0
@export var stamina_drain_rate: float = 25.0
var stamina: float = max_stamina
var is_running: bool = false

# --- Crouch ---
@export var crouch_height: float = 0.8
var standing_height: float
var is_crouching: bool = false

# --- Cámara y rotación ---
var rotation_x: float = 0.0
var camera_bob_timer: float = 0.0
@export var camera_bob_amount: float = 0.2
@export var camera_bob_speed: float = 13.0

# --- Arma ---
@export var max_ammo: int = 30
var ammo: int = max_ammo
var reloading: bool = false
var shooting: bool = false

# --- Nodos de sonido ---
@onready var shoot_sounds = [
	$Camera3D/ShootPlayer1,
	$Camera3D/ShootPlayer2,
	$Camera3D/ShootPlayer3
]
@onready var empty_player = $Camera3D/EmptyPlayer
@onready var reload_player = $Camera3D/ReloadPlayer

# --- Inicialización ---
func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	standing_height = $Camera3D.position.y

# --- Movimiento de cámara ---
func _input(event):
	if event is InputEventMouseMotion:
		rotate_y(-event.relative.x * mouse_sensitivity)
		rotation_x -= event.relative.y * mouse_sensitivity
		rotation_x = clamp(rotation_x, -1.5, 1.5)
		$Camera3D.rotation.x = rotation_x

# --- Lógica principal ---
func _process(delta):
	# Detecta input de disparo
	if Input.is_action_pressed(\"shoot\") and not shooting and not reloading:
		shooting = true
		_shoot_loop()
	elif not Input.is_action_pressed(\"shoot\"):
		shooting = false

	# Detecta recarga
	if Input.is_action_just_pressed(\"reload\"):
		reload()

func _physics_process(delta):
	var input_dir = Vector3.ZERO

	if Input.is_action_pressed(\"move_forward\"):
		input_dir.z -= 1
	if Input.is_action_pressed(\"move_backward\"):
		input_dir.z += 1
	if Input.is_action_pressed(\"move_left\"):
		input_dir.x -= 1
	if Input.is_action_pressed(\"move_right\"):
		input_dir.x += 1

	input_dir = input_dir.normalized()
	var direction = (transform.basis * input_dir)
	direction.y = 0
	direction = direction.normalized()

	# --- Correr ---
	is_running = Input.is_action_pressed(\"sprint\") and stamina > 0 and not is_crouching
	if is_running:
		stamina = max(stamina - stamina_drain_rate * delta, 0)
	else:
		stamina = clamp(stamina + stamina_recovery_rate * delta, 0, max_stamina)

	# --- Agacharse ---
	if Input.is_action_pressed(\"crouch\"):
		if not is_crouching:
			is_crouching = true
			$Camera3D.position.y = crouch_height
	else:
		if is_crouching:
			is_crouching = false
			$Camera3D.position.y = standing_height

	# --- Velocidad ---
	var current_speed = walk_speed
	if is_running:
		current_speed = run_speed
	elif is_crouching:
		current_speed = crouch_speed

	velocity.x = direction.x * current_speed
	velocity.z = direction.z * current_speed

	# --- Gravedad y salto ---
	if not is_on_floor():
		velocity.y -= gravity * delta
	else:
		if Input.is_action_just_pressed(\"jump\") and not is_crouching:
			velocity.y = jump_speed

	move_and_slide()

	# Cámara bob
	_apply_camera_bob(delta, input_dir.length(), is_on_floor())

	# Recoil visual
	current_recoil_angle = lerp(current_recoil_angle, 0.0, delta * recoil_recover_speed)
	$Camera3D.rotation.x = rotation_x + deg_to_rad(current_recoil_angle)

	# Recoil del arma
	var weapon_holder = $Camera3D.get_node_or_null(\"WeaponHolder\")
	if weapon_holder:
		current_weapon_recoil = lerp(current_weapon_recoil, 0.0, delta * weapon_recoil_recover_speed)
		var base_position = Vector3(0.4, -0.4, -0.8 - current_weapon_recoil)
		var bob_offset_y = sin(camera_bob_timer) * 0.05
		var bob_offset_x = sin(camera_bob_timer * 0.5) * 0.05
		weapon_holder.position = base_position + Vector3(bob_offset_x, bob_offset_y, 0)

# --- Bob tipo DOOM ---
func _apply_camera_bob(delta, movement_amount: float, on_floor: bool):
	if on_floor and movement_amount > 0:
		camera_bob_timer += delta * camera_bob_speed
		var bob_offset = sin(camera_bob_timer) * camera_bob_amount
		$Camera3D.position.y = standing_height + bob_offset
	else:
		$Camera3D.position.y = lerp($Camera3D.position.y, standing_height, delta * 5.0)

# --- Recoil ---
func apply_recoil():
	current_recoil_angle -= recoil_angle
	current_weapon_recoil -= weapon_recoil_distance

# --- Bucle de disparo ---
func _shoot_loop():
	while shooting and not reloading:
		if ammo > 0:
			ammo -= 1
			apply_recoil()
			var s = shoot_sounds[randi() % shoot_sounds.size()]
			s.play()
			print(\"Bang! Balas restantes:\", ammo)
		else:
			if not empty_player.playing:
				empty_player.play()
			print(\"Sin balas!\")
			shooting = false
		await get_tree().create_timer(0.1).timeout  # cadencia de disparo

# --- Recarga ---
func reload():
	if reloading or ammo == max_ammo:
		return
	reloading = true
	reload_player.play()
	print(\"Recargando...\")
	await get_tree().create_timer(2.0).timeout
	ammo = max_ammo
	reloading = false
	print(\"✅ Recarga completa!\")
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_4xowi"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ivqoo"]
albedo_texture = ExtResource("1_28dm3")
uv1_triplanar = true

[sub_resource type="PlaneMesh" id="PlaneMesh_wbwvp"]
size = Vector2(300, 300)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_28dm3"]
data = PackedVector3Array(150, 0, 150, -150, 0, 150, 150, 0, -150, -150, 0, 150, -150, 0, -150, 150, 0, -150)

[node name="main" type="Node3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.12398529, 0, 0)

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_x6cpl")

[node name="Player" type="CharacterBody3D" parent="."]
script = SubResource("GDScript_4xowi")

[node name="Camera3D" type="Camera3D" parent="Player"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.13408563, 4.302849, 0.034178853)

[node name="WeaponHolder" type="Node3D" parent="Player/Camera3D"]

[node name="Sprite3D" type="Sprite3D" parent="Player/Camera3D/WeaponHolder"]
transform = Transform3D(0.5, 0, 0, 0, 0.5, 0, 0, 0, 0.5, 0.062, -0.2, -0.683)
cast_shadow = 0
texture = ExtResource("1_ivqoo")

[node name="ShootPlayer1" type="AudioStreamPlayer" parent="Player/Camera3D"]
stream = ExtResource("4_q0d2a")

[node name="ShootPlayer2" type="AudioStreamPlayer" parent="Player/Camera3D"]
stream = ExtResource("5_wp25t")

[node name="ShootPlayer3" type="AudioStreamPlayer" parent="Player/Camera3D"]
stream = ExtResource("6_ympoa")

[node name="EmptyPlayer" type="AudioStreamPlayer" parent="Player/Camera3D"]
stream = ExtResource("7_24gbr")

[node name="ReloadPlayer" type="AudioStreamPlayer" parent="Player/Camera3D"]
stream = ExtResource("8_2m65v")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Player"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.5809941, 0)
shape = SubResource("CapsuleShape3D_4xowi")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.9308519, 0.008940174, 0.36528736, -0.3653967, 0.022775183, 0.93057317, 0, -0.9997006, 0.024467032, 63.350853, 152.5575, 0)

[node name="MeshInstance3D2" type="MeshInstance3D" parent="."]
material_override = SubResource("StandardMaterial3D_ivqoo")
lod_bias = 0.001
mesh = SubResource("PlaneMesh_wbwvp")

[node name="StaticBody3D" type="StaticBody3D" parent="MeshInstance3D2"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="MeshInstance3D2/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_28dm3")
